{% set init -%}
{% raw -%}
- name: install stable toolchain
  uses: dtolnay/rust-toolchain@master
  with:
    toolchain: ${{ inputs.toolchain }}
    targets: ${{ inputs.targets }}
    components: clippy, rustfmt

- name: rust cache
  id: rust-cache
  uses: Swatinem/rust-cache@v2
  with:
    workspaces: "${{ inputs.workdir }}"
    cache-targets: "false"
    cache-all-crates: "true"

- name: setup tools
  run: |
    cargo install cargo-audit --version 0.20.0
    cargo install cargo-auditable--version 0.6.2
    cargo install cargo2junit --version 0.1.13
    cargo install cargo-tarpaulin --version 0.29.2
    cargo install cargo-nextest --version 0.9.70
{% endraw %}
{%- endset %}

{% set env -%}
{% raw -%}
- id: environments
  name: environments
  run: |
    opt="--no-deps --format-version 1"
    if [ -d "src-tauri" ]; then
      opt="$opt --manifest-path src-tauri/Cargo.toml"
    fi
    version=$(git describe --tags --abbrev=0)
    version=${version#v}
    version="$version-$(cargo metadata $opt | jq -r '.packages[0].version')"
    echo "
    project=$(cargo metadata $opt | jq -r '.packages[0].name')
    version=$version
    " >> "$GITHUB_OUTPUT"
  shell: bash
{% endraw %}
{%- endset %}

{% set lint -%}
- name: lint
  run: |
    cargo fmt --all -- --check
    cargo check --no-default-features
    cargo clippy --all-targets --all-features -- -D warnings
{% endset %}

{% set sec_scan -%}
- name: scan
  run: cargo generate-lockfile && cargo audit
{%- endset %}

{% set build -%}
- name: test
  run: |
    cargo nextest run --target-dir target
    cargo tarpaulin --skip-clean --all-features --workspace --out xml --output-dir target

- name: build
  run: cargo install cargo-auditable && cargo auditable build --release
{%- endset %}
