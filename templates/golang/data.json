{
  "variables": {
    "inputs": [
      {
<<<<<<< HEAD
        "name": "workdir",
        "default": "./",
        "desc": "Specify all of steps where are run",
=======
        "name": "golang_workdir",
        "default": "./",
        "desc": "Specify all of golang steps where are run",
        "type": "string",
        "required": "false"
      },
      {
        "name": "container_workdir",
        "default": "./",
        "desc": "Specify all of container steps where are run",
>>>>>>> 0dcd217 (cc)
        "type": "string",
        "required": "false"
      },
      {
        "name": "GOOS",
        "default": "linux",
        "desc": "GOOS target os",
        "type": "string",
        "required": "false"
      },
      {
        "name": "GOARCH",
        "default": "amd64",
        "desc": "GOARCH arch",
        "type": "string",
        "required": "false"
      },
      {
        "name": "ENTRANCE",
        "default": "./main.go",
        "desc": "Specify main.go relative path",
        "type": "string",
        "required": "false"
      }
    ],
    "secrets": [
      {
        "name": "SONAR_HOST_URL",
        "desc": "Sonarqube host url",
        "required": "false"
      },
      {
        "name": "SONAR_TOKEN",
        "desc": "Sonarqube Token",
        "required": "false"
      }
    ],
    "outputs": []
  },
  "lint": {
  },
  "security": {
    "upload": {
      "name": "gosec-report",
      "paths": [
<<<<<<< HEAD
        "${{ inputs.workdir }}build/gosec-report.json"
=======
        "${{ inputs.golang_workdir }}build/gosec-report.json"
>>>>>>> 0dcd217 (cc)
      ]
    }
  },
  "build": {
    "download": {
      "name": "gosec-report",
      "paths": [
<<<<<<< HEAD
        "${{ inputs.workdir }}build/gosec-report.json"
=======
        "${{ inputs.golang_workdir }}build/gosec-report.json"
>>>>>>> 0dcd217 (cc)
      ]
    },
    "upload": {
      "name": "target",
      "paths": [
<<<<<<< HEAD
        "${{ inputs.workdir }}build/"
=======
        "${{ inputs.golang_workdir }}build/"
>>>>>>> 0dcd217 (cc)
      ]
    },
    "sonaropts": [
      "-Dsonar.language=go",
      "-Dsonar.sourceEncoding=UTF-8",
      "-Dsonar.exclusions=**/*_test.go,**/vendor/**",
      "-Dsonar.test.inclusions=**/*_test.go",
      "-Dsonar.test.exclusions=**/vendor/**",
      "-Dsonar.go.test.reportPaths=build/report.xml",
      "-Dsonar.go.coverage.reportPaths=build/coverage.out"
    ]
  },
  "containerize": {
    "download": {
      "name": "target",
      "paths": [
<<<<<<< HEAD
        "${{ inputs.workdir }}build/"
      ]
    }
  }
}
=======
        "${{ inputs.golang_workdir }}build/"
      ]
    }
  }
}
>>>>>>> 0dcd217 (cc)
