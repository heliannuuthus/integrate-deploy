{% set init -%}
{%- raw %}
permissions:
  contents: write
strategy:
  fail-fast: false
  matrix:
    include:
      - platform: "macos-latest"
        target: "aarch64-apple-darwin"
      - platform: "macos-latest"
        target: "x86_64-apple-darwin"
      - platform: "ubuntu-latest"
        target: "x86_64-unknown-linux-gnu"
      - platform: "windows-latest"
        target: "x86_64-pc-windows-msvc"

runs-on: ${{ matrix.platform }}
defaults:
  run:
    working-directory: ${{ inputs.workdir }}
steps:
  - uses: actions/checkout@v4
    with:
      fetch-depth: 0
{% endraw -%}
{%- endset %}

{% macro apt_cache(version, packages=[]) -%}
- name: linux install dependencies
  uses: awalsh128/cache-apt-pkgs-action@latest
  if: matrix.platform == 'ubuntu-latest'
  with:
    packages: {% for package in packages -%} {{ package }} {% endfor +%}
    version: {{ version }}
    execute_install_scripts: true
{% endmacro %}

{% set toolchain_cache -%}
{%- raw -%}
- name: install stable toolchain
  uses: dtolnay/rust-toolchain@master
  with:
    toolchain: ${{ inputs.toolchain }}
    targets: ${{ matrix.target }}

- name: rust cache
  uses: swatinem/rust-cache@v2
  with:
    workspaces: "${{ inputs.workdir }}/src-tauri"
    cache-targets: false

- name: install frontend dependencies
  run: pnpm install && pnpm eslint --fix . && pnpm prettier --write .
{% endraw -%}
{%- endset -%}

{% set tauri -%}
{% raw -%}
- id: tauri-action
  uses: tauri-apps/tauri-action@dev
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  with:
    tagName: ${{ steps.environments.outputs.project }}-v__VERSION__
    releaseName: "${{ steps.environments.outputs.project }} v__VERSION__"
    releaseBody: ${{ github.event.head_commit.message }}
    releaseDraft: true
    prerelease: false
    args: --target ${{ matrix.target }}
{% endraw -%}
{%- endset %}
