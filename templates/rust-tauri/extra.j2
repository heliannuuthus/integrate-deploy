{% macro init(workdir) -%}
{%- raw %}
permissions:
  contents: write
strategy:
  fail-fast: false
  matrix:
    settings:
      - platform: "macos-latest"
        args: "--target aarch64-apple-darwin"
      - platform: "macos-latest"
        args: "--target x86_64-apple-darwin"
<<<<<<< HEAD
      - platform: "ubuntu-20.04"
=======
      - platform: "ubuntu-latest"
>>>>>>> a522afb (rust tauri)
        args: ""
      - platform: "windows-latest"
        args: ""

runs-on: ${{ matrix.settings.platform }}
{% endraw -%}
defaults:
  run:
    working-directory: ${{ workdir }}
steps:
  - uses: actions/checkout@v4
{%- endmacro %}

{% macro apt_cache(version, packages=[]) -%}
- name: linux install dependencies
  uses: awalsh128/cache-apt-pkgs-action@latest
<<<<<<< HEAD
  if: matrix.settings.platform == 'ubuntu-20.04'
=======
  if: matrix.settings.platform == 'ubuntu-latest'
>>>>>>> a522afb (rust tauri)
  with:
    packages: {% for package in packages -%} {{ package }} {% endfor +%}
    version: {{ version }}
    execute_install_scripts: true
{% endmacro %}

{% set toolchain_cache -%}
{%- raw -%}
- name: install stable toolchain
  uses: dtolnay/rust-toolchain@stable
  with:
    targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

- name: rust cache
  uses: swatinem/rust-cache@v2
  with:
<<<<<<< HEAD
    workspaces: "${{ inputs.node_workdir }}/src-tauri -> target"
=======
    workspaces: "${{ inputs.node_workdir }}/src-tauri"
    cache-targets: false
>>>>>>> a522afb (rust tauri)

- name: install frontend dependencies
  run: pnpm install && pnpm eslint --fix . && pnpm prettier --write .
{% endraw -%}
{% endset %}

{% set tauri -%}
{%- raw %}
<<<<<<< HEAD
- uses: tauri-apps/tauri-action@v0
=======
- id: tauri-action
  uses: tauri-apps/tauri-action@v0
>>>>>>> a522afb (rust tauri)
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  with:
    tagName: ${{ steps.environments.outputs.version }}
    releaseName: ${{ steps.environments.outputs.project }}
    releaseBody: ${{ github.event.head_commit.message }}
    releaseDraft: true
    prerelease: false
    args: ${{ matrix.settings.args }}
{% endraw -%}
{%- endset %}
