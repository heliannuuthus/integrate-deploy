{% set init -%}
{% raw -%}
runs-on: ubuntu-latest
defaults:
  run:
<<<<<<< HEAD
    working-directory: ${{ inputs.workdir }}
=======
    working-directory: ${{ inputs.node_workdir }}
>>>>>>> 0dcd217 (cc)
steps:
  - uses: actions/checkout@v4
  - uses: actions/setup-node@v4
    with:
      node-version: ${{ inputs.node }}
  - uses: pnpm/action-setup@v3
    with:
      version: 8
      run_install: false
{% endraw %}
{%- endset %}

{% set cache -%}
{% raw -%}
- name: pnpm cache dir
  id: pnpm-cache-dir
  run: echo "PNPM_STORE=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

- name: restore node cache
  uses: actions/cache/restore@v4
  id: cache-restore-node_modules
  env:
    cache-name: cache-node_modules
  with:
    # caching node_modules
    path: |
<<<<<<< HEAD
      ${{ inputs.workdir }}node_modules
=======
      ${{ inputs.node_workdir }}node_modules
>>>>>>> 0dcd217 (cc)
      **/node_modules
      **/.eslintcache
      ${{ steps.pnpm-cache-dir.outputs.PNPM_STORE }}
    key: ${{ runner.os }}-pnpm-store-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
    restore-keys: |
      ${{ runner.os }}-pnpm-store-${{ env.cache-name }}-
{% endraw %}
{%- endset %}

{% set setup %}
{% raw -%}
- name: setup
  if: steps.cache-restore-node_modules.outputs.cache-hit != 'true'
  run: |
    pnpm i
    pnpm i -g eslint
    pnpm i -g prettier

- name: cache node modules
  if: ${{ steps.cache-restore-node_modules.outputs.cache-hit != 'true'}}
  uses: actions/cache/save@v4
  id: cache-save-node_modules
  env:
    cache-name: cache-node_modules
  with:
    # caching node_modules
    path: |
<<<<<<< HEAD
      ${{ inputs.workdir }}node_modules
=======
      ${{ inputs.node_workdir }}node_modules
>>>>>>> 0dcd217 (cc)
      **/node_modules
      **/.eslintcache
      ${{ steps.pnpm-cache-dir.outputs.PNPM_STORE }}
    key: ${{ runner.os }}-pnpm-store-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
{% endraw %}
{% endset %}

{% set env -%}
{% raw -%}
- id: environments
  name: environments
  run: |
    echo "
    project=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].name')
    version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
    " >> "$GITHUB_OUTPUT"
  shell: bash
{% endraw %}
{%- endset %}

{% set lint -%}
- name: lint
  run: |
    pnpm eslint .
    pnpm prettier . --check-debug
{% endset %}

{% set sec_scan -%}
- name: dependencies audit
  run: |
    pnpm audit
{%- endset %}

{% set build -%}
{% raw %}
- name: build
  if: ${{ inputs.build }}
  run: pnpm ${{ inputs.build }}

- name: test
  if: ${{ inputs.test }}
  run: pnpm ${{ inputs.test }}
{% endraw %}
{%- endset %}
