on:
  workflow_call:
    inputs:
      workdir:
        required: false
        default: "./"
        type: "string"
        description: "Specify containerize base dir"

      version:
        required: true
        type: "string"
        description: "image marjor version, complete: ${major}-${timestamp}rc/alpha-short_commit_hash"

      targets:
        required: true
        type: "string"
        description: "targets artifact download paths"


jobs:
  containerize:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workdir }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: download targets
        uses: actions/download-artifact@v4
        with:
          name: targets
          path: |
              ${{ inputs.targets }}

      - id: environments
        name: environments
        run: |
          echo "timestamp=$(date +%Y%m%d | cut -c 3-8)" >> "$GITHUB_OUTPUT"
          echo "short_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - id: meta
        name: container meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,enable=${{ github.ref == format('refs/heads/{0}', 'master') }},pattern=${{ inputs.version }}-${{ steps.environments.outputs.timestamp }}rc-${{ steps.environments.outputs.short_sha }},value=${{ inputs.version || 'v0.0.1' }}
            type=semver,enable=${{ github.ref != format('refs/heads/{0}', 'master') }},pattern=${{ inputs.version }}-${{ steps.environments.outputs.timestamp }}alpha-${{ steps.environments.outputs.short_sha }},value=${{ inputs.version || 'v0.0.1'  }}

      - name: authenticate
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: push github
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.workdir }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
