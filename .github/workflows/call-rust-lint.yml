on:
  workflow_call:
    inputs:
      workdir:
        required: false
        default: "./"
        type: "string"
        description: "Specify all of steps where are run"

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workdir }}
    steps:
      - uses: actions/checkout@v4
      - name: restore rust cache
        uses: actions/cache/restore@v4
        id: cache-restore-cargo
        env:
          cache-name: cache-cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-heliannuuthus-store-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-heliannuuthus-store-${{ env.cache-name }}-
            ${{ runner.os }}-heliannuuthus-store-
            ${{ runner.os }}-
      - name: lint
        run: |
          cargo fmt --all -- --check
          cargo check --no-default-features
          cargo clippy --all-targets --all-features -- -D warnings

  security:
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: ${{ inputs.workdir }}
    steps:
      - uses: actions/checkout@v4
      - name: restore rust cache
        uses: actions/cache/restore@v4
        id: cache-restore-cargo
        env:
          cache-name: cache-cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-rust-store-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-store-${{ env.cache-name }}-
            ${{ runner.os }}-rust-store-
            ${{ runner.os }}-
      - name: scan
        run: cargo generate-lockfile && cargo audit
