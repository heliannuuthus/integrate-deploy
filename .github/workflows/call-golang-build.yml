on:
  workflow_call:
    inputs:
      workdir:
        required: false
        default: "./"
        type: "string"
        description: "Specify all of steps where are run"
      GOOS:
        required: false
        default: "linux"
        type: "string"
        description: "GOOS target os"
      GOARCH:
        required: true
        type: "string"
        description: "GOARCH arch"
      ENTRANCE:
        required: false
        default: "main.go"
        type: string
        description: "main.go relative path"

    outputs:
      version:
        description: "golang application version"
        value: ${{ jobs.build.outputs.version }}

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workdir }}
    outputs:
      version: ${{ steps.environments.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.20"

      - name: restore golang cache
        uses: actions/cache/restore@v4
        id: cache-restore-golang
        env:
          cache-name: cache-gomod
        with:
          path: |
            ~/go
          key: ${{ runner.os }}-golang-store-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-store-${{ env.cache-name }}-

      - name: test
        run: |
          go test -gcflags="all=-N -l" -coverprofile=build/coverage.txt -covermode count -json -v ./... 2>&1 |
          tee build/test.json | gotestfmt | tee >(go-junit-report -parser gojson -out build/report.xml);

      - name: build binary
        run: |
          mkdir build
          CGO_ENABLE=0 GOOS=${{ inputs.GOOS }} GOARCH=${{ inputs.GOARCH }} go build -a -o build/${{ github.repository }} ${{ inputs.ENTRANCE }}

      - id: environments
        name: environments
        run: |
          echo "
          project=${{ github.repository }}
          version=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null)
          " >> "$GITHUB_OUTPUT"

      - name: upload target
        uses: actions/upload-artifact@v4
        with:
          name: target
          path: |
            ${{ inputs.workdir }}build/${{ steps.environments.outputs.project }}
