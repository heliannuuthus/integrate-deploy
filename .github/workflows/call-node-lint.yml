on:
  workflow_call:
    inputs:
      workdir:
        required: false
        default: "./"
        type: "string"
        description: "Specify all of steps where are run"

      node:
        required: false
        type: "string"
        default: "lts/*"
        description: "node version"

jobs:
  setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workdir }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node }}

      - name: pnpm cache dir
        id: pnpm-cache-dir
        run: echo "name=dir::$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: restore node cache
        uses: actions/cache/restore@v3
        id: cache-restore-node_modules
        env:
          cache-name: cache-node_modules
        with:
          # caching node_modules
          path: |
            node_modules
            **/node_modules
            **/.eslintcache
            ${{ steps.pnpm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: setup
        if: steps.cache-restore-node_modules.outputs.cache-hit != 'true'
        run: |
          npm i -g pnpm
          pnpm i
          pnpm i -g eslint

      - name: cache node modules
        if: steps.cache-restore-node_modules.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        id: cache-save-node_modules
        env:
          cache-name: cache-node_modules
        with:
          # caching node_modules
          path: |
            node_modules
            **/node_modules
            **/.eslintcache
            ${{ steps.pnpm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}

  lint:
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workdir }}
    steps:
      - uses: actions/checkout@v4
      - name: pnpm cache dir
        id: pnpm-cache-dir
        run: echo "name=dir::$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: restore node cache
        uses: actions/cache/restore@v3
        id: cache-restore-node_modules
        env:
          cache-name: cache-node_modules
        with:
          # caching node_modules
          path: |
            node_modules
            **/node_modules
            **/.eslintcache
            ${{ steps.pnpm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: lint
        run: |
          pnpm eslint .
          pnpm prettier . --check-debug

  security:
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workdir }}
    steps:
      - uses: actions/checkout@v4
      - name: pnpm cache dir
        id: pnpm-cache-dir
        run: echo "name=dir::$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: restore node cache
        uses: actions/cache/restore@v3
        id: cache-restore-node_modules
        env:
          cache-name: cache-node_modules
        with:
          # caching node_modules
          path: |
            node_modules
            **/node_modules
            **/.eslintcache
            ${{ steps.pnpm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: audit
        run: |
          pnpm audit
