on:
  pull_request:
    types: [opened, reopened, synchronize]
  pull_request_target:
    types: [closed]

jobs:
  print:
    runs-on: ubuntu-latest
    steps:
      - name: print-merge
        env:
          MERGED: ${{ github.event.pull_request.merged }}
          MERGED_STR: ${{ github.event.pull_request.merged == 'true' }}
          MERGED_BOOL: ${{ github.event.pull_request.merged == true }}
        run: |
          echo MERGED: $MERGED
          echo MERGED_STR: $MERGED_STR
          echo MERGED_BOOL: $MERGED_BOOL

  setup:
    uses: ./.github/workflows/call-golang-setup.yml
    with:
      workdir: "tests/golang/"

  lint:
    if: ${{ github.event.pull_request.merged != true }}
    needs: setup
    uses: ./.github/workflows/call-golang-lint.yml
    with:
      workdir: "tests/golang/"

  build:
    if: ${{ always() && needs.setup.result == 'success' }}
    needs: [setup, lint]
    uses: ./.github/workflows/call-golang-build.yml
    with:
      workdir: "tests/golang/"
      GOOS: linux
      GOARCH: amd64
      ENTRANCE: cmd/main.go

  containeraized:
    if: ${{ github.event.pull_request.merged }}
    needs: build
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/call-containerize.yml
    with:
      version: ${{ needs.build.outputs.version }}
      workdir: "tests/golang/"
      target: "tests/golang/build"
