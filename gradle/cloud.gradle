buildscript {
    repositories {
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
        maven { url 'https://repo.spring.io/plugins-snapshot' }
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:3.2.3"
        classpath "io.spring.gradle:dependency-management-plugin:1.1.4"
        classpath "org.springdoc:springdoc-openapi-gradle-plugin:1.8.0"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:6.25.0"
        classpath "io.freefair.gradle:lombok-plugin:8.6"
    }
}

apply plugin: "java"

ext {
    r2dbcConnCompVersion = "2.1.8"
    r2dbcSpiVersion = "1.0.0.RELEASE"
    r2dbcPoolVersion = "1.0.0.RELEASE"
    joseVersion = "0.9.2"
    log4j2Version = "2.19.0"
    guavaVersion = "31.1-jre"
    hutoolVersion = "5.8.10"
    springDocVersion = "2.0.2"
    bootVersion = "3.0.1"
    cloudVersion = "2022.0.0"
    alibabaCloudVersion = "2022.0.0.0-RC1"
    guavaVersion = "33.0.0-jre"
    lang3Version + "3.14.0"
    spotlessVersion = "1.21.0"
    helianthusCommonVersion = "0.1.0"
}

sourceCompatibility = 17
targetCompatibility = 17


dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-r2dbc"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-devtools"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "io.projectreactor:reactor-test"

    // apollo
    implementation "io.ghcr.heliannuuthus:helianthus-annuus-apollo-client:${helianthusCommonVersion}"

    // spring cloud
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery"


    // utils
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation 'org.apache.commons:commons-lang3:{lang3Version}'

}

allprojects {

    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "com.diffplug.spotless"
    apply plugin: "io.freefair.lombok"
    apply plugin: "me.qoomon.git-versioning"

    group "io.ghrc.heliannuuthus"

    gitVersioning.apply {
        version = rootProject.findProperty("version")
        refs {
            branch('master') {
                version = '${version}-${commit.short}'
            }
            branch('.+') {
                version = '${version}-${commit.short}-SNAPSHOT'
            }
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        all*.exclude module: 'spring-boot-starter-logging'
    }

    repositories {
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://maven.aliyun.com/nexus/content/repositories/jcenter" }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/heliannuuthus/${project.name}"
            credentials {
                username = rootProject.findProperty("gpr.user") ?: System.getenv("GPR_USER")
                password = rootProject.findProperty("gpr.token") ?: System.getenv("GPR_TOKEN")
            }
        }
        mavenCentral()
    }

    tasks.named("test") {
        useJUnitPlatform()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${bootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${cloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${alibabaCloudVersion}"
        }
    }

    spotless {
        java {
            importOrder()
            removeUnusedImports()
            googleJavaFormat("${spotlessVersion}").groupArtifact("com.google.googlejavaformat:google-java-format")
            formatAnnotations()
        }
    }
}
