buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"

        }
        maven { url "https://repo.spring.io/plugins-snapshot" }
        mavenCentral()
    }
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:6.14.1"
        classpath "io.freefair.gradle:lombok-plugin:6.6.1"
        classpath "me.qoomon:gradle-git-versioning-plugin:6.4.0"
    }
}

gitVersioning.apply {
    version = rootProject.findProperty("version")
    refs {
        branch('master') {
            version = '${version}-r${commit.short}'
        }
        branch('.+') {
            version = '${version}-s${commit.short}'
        }
    }
}


ext {
    junitVersion = "5.9.2"
    mockitoVersion = "4.8.1"
    r2dbcConnCompVersion = "2.1.8"
    r2dbcSpiVersion = "1.0.0.RELEASE"
    r2dbcPoolVersion = "1.0.0.RELEASE"
    joseVersion = "0.9.2"
    log4j2Version = "2.19.0"
    guavaVersion = "31.1-jre"
    hutoolVersion = "5.8.10"
    springDocVersion = "2.0.2"
    bootVersion = "3.0.1"
    cloudVersion = "2022.0.0"
    alibabaCloudVersion = "2022.0.0.0-RC1"
    spotlessVersion = "1.15.0"
    helianthusCommonVersion = "0.0.1"
}

sourceCompatibility = 17
targetCompatibility = 17


dependencies {
    // utils
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "cn.hutool:hutool-core:${hutoolVersion}"


    // tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testRuntimeOnly "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testRuntimeOnly "org.mockito:mockito-core:${mockitoVersion}"

}

allprojects {

    apply plugin: "com.diffplug.spotless"
    apply plugin: "io.freefair.lombok"
    apply plugin: "me.qoomon.git-versioning"
    apply plugin: "java-library"
    apply plugin: "maven-publish"

    group "com.heliannuuthus"

    repositories {
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://maven.aliyun.com/nexus/content/repositories/jcenter" }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/heliannuuthus/${project.name}"
            credentials {
                username = rootProject.findProperty("gpr.user") ?: System.getenv("GPR_USER")
                password = rootProject.findProperty("gpr.token") ?: System.getenv("GPR_TOKEN")
            }
        }
        mavenCentral()
    }
    
    spotless {
        java {
            googleJavaFormat("${spotlessVersion}").groupArtifact("com.google.googlejavaformat:google-java-format")
        }
    }
}

java {
    withSourcesJar()
//    withJavadocJar() // encoding error
}

tasks.withType(Jar.class).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


jar {
    manifest {
        attributes(
                "Manifest-Version": 1.0,
        )
    }
}
sourceSets.main {
    java.srcDirs("src/main/java")
}

publishing {
    repositories {
        maven {
            name "GitHubPackages"
            url "https://maven.pkg.github.com/heliannuuthus/${rootProject.name}"
            credentials {
                username = rootProject.findProperty("gpr.user") ?: System.getenv("GPR_USER")
                password = rootProject.findProperty("gpr.token") ?: System.getenv("GPR_TOKEN")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = "${project.name}"
            println project.version
            version = project.version
        }
    }
}