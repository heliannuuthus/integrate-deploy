buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/plugins-snapshot" }
        mavenCentral()
    }
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:6.25.0"
        classpath "io.freefair.gradle:lombok-plugin:8.6"
        classpath "me.qoomon:gradle-git-versioning-plugin:6.4.2"
        classpath "name.remal.gradle-plugins.sonarlint:sonarlint:3.4.9"
    }
}


apply plugin: "jacoco"
apply plugin: "java-library"
apply plugin: "maven-publish"
apply plugin: "com.diffplug.spotless"
apply plugin: "io.freefair.lombok"
apply plugin: "me.qoomon.git-versioning"
apply plugin: "name.remal.sonarlint"

group "io.ghrc"

gitVersioning.apply {
    version = rootProject.findProperty("version")
    refs {
        branch('master') {
            version = '${version}-${commit.short}'
        }
        branch('.+') {
            version = '${version}-${commit.short}-SNAPSHOT'
        }
    }
}

ext {
    junitVersion = "5.10.2"
    mockitoVersion = "5.11.0"
    guavaVersion = "33.0.0-jre"
    spotlessVersion = "1.21.0"
    guavaVersion = "31.1-jre"
}

sourceCompatibility = 17
targetCompatibility = 17


dependencies {
    // utils
    implementation "com.google.guava:guava:${guavaVersion}"

    // tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testRuntimeOnly "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testRuntimeOnly "org.mockito:mockito-core:${mockitoVersion}"

}

java {
    withSourcesJar()
//    withJavadocJar() // encoding error
}

tasks.withType(Jar.class).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


jar {
    manifest {
        attributes(
                "Manifest-Version": 1.0,
        )
    }
}

sourceSets.main {
    java.srcDirs("src/main/java")
}


repositories {
    maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
    maven { url "https://maven.aliyun.com/nexus/content/repositories/jcenter" }
    maven {
        name = "GitHubPackages"
        url = "https://maven.pkg.github.com/heliannuuthus/${project.name}"
        credentials {
            username = rootProject.findProperty("gpr.user") ?: System.getenv("GPR_USER")
            password = rootProject.findProperty("gpr.token") ?: System.getenv("GPR_TOKEN")
        }
    }
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    dependsOn test
    reports {
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('reports/jacoco/html')
        xml.required = true
        xml.outputLocation = layout.buildDirectory.file("reports/jacocorReports.xml")
    }
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat("${spotlessVersion}").groupArtifact("com.google.googlejavaformat:google-java-format")
        formatAnnotations()
    }
}

tasks.named("test") {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

tasks.register("name") {
    logger.quiet(project.name)
}
publishing {
    repositories {
        maven {
            name "GitHubPackages"
            url "https://maven.pkg.github.com/heliannuuthus/${rootProject.name}"
            credentials {
                username = rootProject.findProperty("gpr.user") ?: System.getenv("GPR_USER")
                password = rootProject.findProperty("gpr.token") ?: System.getenv("GPR_TOKEN")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = "${project.name}"
            println project.version
            version = project.version
        }
    }
}